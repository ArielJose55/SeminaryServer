/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package seminaryserver.vista.ventanas;

import javax.swing.JOptionPane;
import seminaryserver.logica.modelo.Servidor;
import seminaryserver.vista.paneles.PanelCentral;

/**
 *
 * @author Ariel Arnedo
 */
public class VentanaPrincipal extends VentanaRoot {

    private Servidor servidor = null;

    
    public VentanaPrincipal() {
        super("Host Servidor");
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        campoIPServer = createTextField();
        botonIniciar = createButtonMenu();
        campoPuertoServer = createTextField();
        panelCenter = new javax.swing.JPanel();

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(255, 255, 255));
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        jPanel2.setBackground(getBackground());
        jPanel2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(153, 153, 153)));

        campoIPServer.setEnabled(false);
        try{
            campoIPServer.setText("Direccion Ip Server: "+java.net.InetAddress.getLocalHost().getHostAddress());
        }catch(java.io.IOException ex){}

        botonIniciar.setText("Iniciar");
        botonIniciar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonIniciarActionPerformed(evt);
            }
        });

        campoPuertoServer.setText("Numero de Puerto");
        campoPuertoServer.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                campoPuertoServerMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(campoIPServer, javax.swing.GroupLayout.DEFAULT_SIZE, 453, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addComponent(campoPuertoServer, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(botonIniciar, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(campoPuertoServer, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(campoIPServer, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(botonIniciar, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        panelCenter.setBackground(getBackground());
        panelCenter.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(153, 153, 153)));
        setPanelWorkCenter(panelCenter);
        panelCenter.setLayout(new java.awt.BorderLayout());

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(panelCenter, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(panelCenter, javax.swing.GroupLayout.DEFAULT_SIZE, 455, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void botonIniciarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonIniciarActionPerformed
         if(validarCampos().length() != 0){
            JOptionPane.showMessageDialog(rootPane, validarCampos().toString() ,"Advertenca",JOptionPane.ERROR_MESSAGE);
            return;
        }
        
        if(servidor == null){
            try{
                servidor = new Servidor(Integer.parseInt(campoPuertoServer.getText()));
                servidor.conectar();
                changePanelWork(new PanelCentral(servidor));
                botonIniciar.transferFocus();
            }catch(RuntimeException ex){
                JOptionPane.showMessageDialog(rootPane, ex.getMessage(),"Advertencia", JOptionPane.ERROR_MESSAGE);
                ex.printStackTrace();
                return;
            }
        }
        
        
    }//GEN-LAST:event_botonIniciarActionPerformed

    private void campoPuertoServerMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_campoPuertoServerMouseClicked
        fieldClicked(evt);
    }//GEN-LAST:event_campoPuertoServerMouseClicked

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        if(servidor != null)
            servidor.desconectar();
    }//GEN-LAST:event_formWindowClosing
    private void fieldClicked(java.awt.event.MouseEvent evt){
        javax.swing.JTextField campo = (javax.swing.JTextField) evt.getSource();
        if(campo.equals(campoPuertoServer)){
            try{
                Integer.parseInt(campoPuertoServer.getText());
            }catch(NullPointerException ex){}catch(NumberFormatException ex){
                campoPuertoServer.setText("");
            }
        }else if(campo.equals(campoIPServer)){
            
        }
    }
    
    private StringBuilder validarCampos(){
        StringBuilder sb = new StringBuilder();

        if(campoPuertoServer.getText().compareTo("") == 0){
            sb.append("Numero de puerto de servidor no debe estar vac√≠o");
        }else{
            try{
                Integer.parseInt(campoPuertoServer.getText());
            }catch(NullPointerException ex){}catch(NumberFormatException ex){
                sb.append("El formato del numero de puerto debe ser numerico");
                sb.append("\n");
            }
        }

        return sb;
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton botonIniciar;
    private javax.swing.JTextField campoIPServer;
    private javax.swing.JTextField campoPuertoServer;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel panelCenter;
    // End of variables declaration//GEN-END:variables
}
